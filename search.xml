<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue基础（一）基本语法</title>
      <link href="/2019/12/25/Vue%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
      <url>/2019/12/25/Vue%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue基础-一"><a href="#Vue基础-一" class="headerlink" title="Vue基础(一)"></a>Vue基础(一)</h1><h2 id="1-模板语法"><a href="#1-模板语法" class="headerlink" title="1.模板语法"></a>1.模板语法</h2><ul><li><p>v-cloak 解决插值表达式的闪烁问题，但是只会覆盖自己的插值表达式，不会覆盖元素的值；v-text没有闪烁问题，会覆盖元素中原本的内容。</p></li><li><p>v-html 会覆盖元素内容，但是会将本身内容进行html渲染</p><pre class=" language-java"><code class="language-java">v<span class="token operator">-</span>bind<span class="token operator">:</span>href   直接绑定；v<span class="token operator">-</span>html        将需要绑定的值解析（比如字符里含有html标签，可以被解析）</code></pre></li></ul><ul><li><p>v-bind 绑定 ，<strong>属性绑定，用冒号绑定，只能从model层绑定到view层</strong>（即，script下的message改变，div中的数据也随之改变；但是反之不行）</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">5</span><span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>br<span class="token operator">></span>    <span class="token punctuation">{</span><span class="token punctuation">{</span> ok <span class="token operator">?</span> <span class="token string">'YES'</span> <span class="token operator">:</span> <span class="token string">'NO'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>br<span class="token operator">></span>    <span class="token punctuation">{</span><span class="token punctuation">{</span> message<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 告诉id，此次要绑定的，是一个变量，名字叫id <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div v<span class="token operator">-</span>bind<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"'list-' + id"</span><span class="token operator">></span>菜鸟教程<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> <span class="token punctuation">{</span>    ok<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    message<span class="token operator">:</span> <span class="token string">'RUNOOB'</span><span class="token punctuation">,</span>    id <span class="token operator">:</span> <span class="token number">1</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre></li></ul><ul><li><p>v-on 绑定事件，<strong>用冒号绑定</strong></p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>p<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> message <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>    <span class="token operator">&lt;</span>button v<span class="token operator">-</span>on<span class="token operator">:</span>click<span class="token operator">=</span><span class="token string">"reverseMessage"</span><span class="token operator">></span>反转字符串<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> <span class="token punctuation">{</span>    message<span class="token operator">:</span> <span class="token string">'Runoob!'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">{</span>    reverseMessage<span class="token operator">:</span> <span class="token function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre></li></ul><ul><li><p>v-model <strong>双向绑定</strong>，指令只能在 input、select、textarea、checkbox、radio 等<strong>表单</strong>控件元素上创建双向数据绑定，根据表单上的值，自动更新绑定的元素的值。</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//此处，改变v-model文本框的值，&lt;P>的值随之改变</span><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>p<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> message <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>    <span class="token operator">&lt;</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"message"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> <span class="token punctuation">{</span>    message<span class="token operator">:</span> <span class="token string">'Runoob!'</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre></li></ul><ul><li><p>v-if 根据true/false执行，<strong>用等号绑定</strong></p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>p v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"seen"</span><span class="token operator">></span>现在你看到我了<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> <span class="token punctuation">{</span>    seen<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"type === 'A'"</span><span class="token operator">></span>        A      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"type === 'B'"</span><span class="token operator">></span>        B      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"type === 'C'"</span><span class="token operator">></span>        C      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">></span>        Not A<span class="token operator">/</span>B<span class="token operator">/</span>C      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>    data<span class="token operator">:</span> <span class="token punctuation">{</span>      type<span class="token operator">:</span> <span class="token string">'C'</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre></li></ul><ul><li><p>v-for循环</p><pre class=" language-java"><code class="language-java">  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>ol<span class="token operator">></span>      <span class="token operator">&lt;</span>li v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"site in sites"</span><span class="token operator">></span>        <span class="token punctuation">{</span><span class="token punctuation">{</span> site<span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token punctuation">}</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ol<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>    data<span class="token operator">:</span> <span class="token punctuation">{</span>      sites<span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Runoob'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Google'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Taobao'</span> <span class="token punctuation">}</span>      <span class="token punctuation">]</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>  也可以对一个对象迭代：</p><ol><li>如果只有一个值 value，则该值为属性的值，即“菜鸟教程”；</li><li>如果两个值，value仍为值即“菜鸟教程”，key为属性名即“name”;</li><li>如果三个参数，前两个参数同上，第三个为序号索引，即“0”</li></ol><pre class=" language-java"><code class="language-java">  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>ul<span class="token operator">></span>      <span class="token operator">&lt;</span>li v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"value in object"</span><span class="token operator">></span>      <span class="token punctuation">{</span><span class="token punctuation">{</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span>li v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(value, key) in object"</span><span class="token operator">></span>      <span class="token punctuation">{</span><span class="token punctuation">{</span> key <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>       <span class="token operator">&lt;</span>li v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(value, key, index) in object"</span><span class="token operator">></span>       <span class="token punctuation">{</span><span class="token punctuation">{</span> index <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">.</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> key <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span>li v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"n in 10"</span><span class="token operator">></span>       <span class="token punctuation">{</span><span class="token punctuation">{</span> n <span class="token punctuation">}</span><span class="token punctuation">}</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>    data<span class="token operator">:</span> <span class="token punctuation">{</span>      object<span class="token operator">:</span> <span class="token punctuation">{</span>        name<span class="token operator">:</span> <span class="token string">'菜鸟教程'</span><span class="token punctuation">,</span>        url<span class="token operator">:</span> <span class="token string">'http://www.runoob.com'</span><span class="token punctuation">,</span>        slogan<span class="token operator">:</span> <span class="token string">'学的不仅是技术，更是梦想！'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>  若为集合的遍历：其中item同上面的value，即{ id: 1, name: ‘李斯’ }，而 i 则为序号索引</p><pre class=" language-java"><code class="language-java">    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"name"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>button <span class="token annotation punctuation">@click</span><span class="token operator">=</span><span class="token string">"add"</span><span class="token operator">></span>添加<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span>li v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(item, i) in list"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"item.id"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"checkbox"</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token punctuation">}</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>  <span class="token operator">&lt;</span>script<span class="token operator">></span>      <span class="token comment" spellcheck="true">// 创建 Vue 实例，得到 ViewModel</span>      var vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>        data<span class="token operator">:</span> <span class="token punctuation">{</span>          name<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>          newId<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>          list<span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'李斯'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'吕不韦'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">'嬴政'</span> <span class="token punctuation">}</span>          <span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        methods<span class="token operator">:</span> <span class="token punctuation">{</span>          <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>           <span class="token comment" spellcheck="true">//注意这里是unshift</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token operator">++</span><span class="token keyword">this</span><span class="token punctuation">.</span>newId<span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">''</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></code></pre><p>  为了解决checkbox等内容的绑定问题，要加key</p><pre class=" language-java"><code class="language-java">  <span class="token operator">&lt;</span>li v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(item, i) in list"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"item.id"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"checkbox"</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token punctuation">}</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></code></pre></li></ul><ul><li><p>缩写</p><p><strong>v-bind</strong></p><p>Vue.js 为两个最为常用的指令提供了特别的缩写：</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 完整语法 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>a v<span class="token operator">-</span>bind<span class="token operator">:</span>href<span class="token operator">=</span><span class="token string">"url"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 缩写 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>a <span class="token operator">:</span>href<span class="token operator">=</span><span class="token string">"url"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span></code></pre><p><strong>v-on 缩写</strong></p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 完整语法 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>a v<span class="token operator">-</span>on<span class="token operator">:</span>click<span class="token operator">=</span><span class="token string">"doSomething"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 缩写 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>a <span class="token annotation punctuation">@click</span><span class="token operator">=</span>"doSo</code></pre><p>另：</p><p>当我们给一个比如 props 中，或者 data 中被观测的对象添加一个新的属性的时候，不能直接添加，必须使用 Vue.set 方法。Vue.set 方法用来新增对象的属性。如果要增加属性的对象是响应式的，那该方法可以确保属性被创建后也是响应式的，同时触发视图更新<img src="https://www.runoob.com/wp-content/uploads/2017/10/20170608010237405.png" alt="用Vue.set赋值.png"></p></li></ul><h2 id="2-script-中的方法"><a href="#2-script-中的方法" class="headerlink" title="2. script 中的方法"></a>2. script 中的方法</h2><ul><li><p>插值表达式也可以用来写方法</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>h1<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">hi</span><span class="token punctuation">(</span><span class="token string">'night'</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>在<span class="token operator">&lt;</span>script<span class="token operator">></span>中    methods<span class="token operator">:</span><span class="token punctuation">{</span>        hi<span class="token operator">:</span> <span class="token function">function</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">'Good'</span> <span class="token operator">+</span> time <span class="token operator">+</span> <span class="token string">"!"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//单引号和双引号应该都可以</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre></li></ul><ul><li><p>过滤器：过滤器函数接受表达式的值作为第一个参数。</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>  <span class="token punctuation">{</span><span class="token punctuation">{</span> message <span class="token operator">|</span> capitalize <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> <span class="token punctuation">{</span>    message<span class="token operator">:</span> <span class="token string">'runoob'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  filters<span class="token operator">:</span> <span class="token punctuation">{</span>    capitalize<span class="token operator">:</span> <span class="token function">function</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>value<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">''</span>      value <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> value<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>过滤器可以串联：</p><pre class=" language-java"><code class="language-java"><span class="token punctuation">{</span><span class="token punctuation">{</span> message <span class="token operator">|</span> filterA <span class="token operator">|</span> filterB <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//这里，message 是第一个参数，字符串 'arg1' 将传给过滤器作为第二个参数， arg2 表达式的值将被求值然后传给过滤器作为第三个参数</span><span class="token punctuation">{</span><span class="token punctuation">{</span> message <span class="token operator">|</span> <span class="token function">filterA</span><span class="token punctuation">(</span><span class="token string">'arg1'</span><span class="token punctuation">,</span> arg2<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>过滤器可以接收多个表达式，message 和 mesage2 将作为过滤器的前两个参数:</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>  <span class="token punctuation">{</span><span class="token punctuation">{</span> message<span class="token punctuation">,</span>message2 <span class="token operator">|</span> <span class="token function">capitalize</span><span class="token punctuation">(</span><span class="token string">'aa'</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> <span class="token punctuation">{</span>    message<span class="token operator">:</span> <span class="token string">'runoob'</span><span class="token punctuation">,</span>    message2<span class="token operator">:</span> <span class="token string">'runoob'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  filters<span class="token operator">:</span> <span class="token punctuation">{</span>    capitalize<span class="token operator">:</span> <span class="token function">function</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span>value2<span class="token punctuation">,</span>value3<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>value<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">''</span>      value <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>             value<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span>value<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>value2<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span>value2<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>value2<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'&lt;br>'</span><span class="token operator">+</span>value3    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token comment" spellcheck="true">//输出 RunoobrunooB aa</span></code></pre></li></ul><ul><li><p>computed</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>声明了一个计算属性 reversedMessage 。    提供的函数将用作属性 vm<span class="token punctuation">.</span>reversedMessage 的 getter 。    vm<span class="token punctuation">.</span>reversedMessage 依赖于 vm<span class="token punctuation">.</span>message，在 vm<span class="token punctuation">.</span>message 发生改变时，vm<span class="token punctuation">.</span>reversedMessage 也会更新。<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>p<span class="token operator">></span>原始字符串<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> message <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>  <span class="token operator">&lt;</span>p<span class="token operator">></span>计算后反转字符串<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> reversedMessage <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>var vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> <span class="token punctuation">{</span>    message<span class="token operator">:</span> <span class="token string">'Runoob!'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  computed<span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 计算属性的 getter</span>    reversedMessage<span class="token operator">:</span> <span class="token function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// `this` 指向 vm 实例</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>computed 属性默认只有 getter ，不过在需要时你也可以提供一个 setter ：</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>p<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> site <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>var vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> <span class="token punctuation">{</span>    name<span class="token operator">:</span> <span class="token string">'Google'</span><span class="token punctuation">,</span>    url<span class="token operator">:</span> <span class="token string">'http://www.google.com'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  computed<span class="token operator">:</span> <span class="token punctuation">{</span>    site<span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// getter</span>      get<span class="token operator">:</span> <span class="token function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>url      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// setter</span>      set<span class="token operator">:</span> <span class="token function">function</span> <span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        var names <span class="token operator">=</span> newValue<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>url <span class="token operator">=</span> names<span class="token punctuation">[</span>names<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 调用 setter， vm.name 和 vm.url 也会被对应更新</span>vm<span class="token punctuation">.</span>site <span class="token operator">=</span> <span class="token string">'菜鸟教程 http://www.runoob.com'</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'name: '</span> <span class="token operator">+</span> vm<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;br>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'url: '</span> <span class="token operator">+</span> vm<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre></li></ul><ul><li><p>computer 和 method 比较:如下面代码，cnt 是独立于 vm 对象的变量。在使用 reversedMessage 这个计算属性的时候，第一次会执行代码，得到一个值，以后再使用 reversedMessage 这个计算属性，因为 vm 对象没有发生改变，于是界面渲染就直接用这个值，不再重复执行代码。而 reversedMessage2 没有这个缓存，只要用一次，函数代码就执行一次，于是每次返回值都不一样。</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>p<span class="token operator">></span>原始字符串<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> message <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>  <span class="token operator">&lt;</span>p<span class="token operator">></span>计算后反转字符串<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> reversedMessage <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>  <span class="token operator">&lt;</span>p<span class="token operator">></span>计算后反转字符串<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> reversedMessage <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>  <span class="token operator">&lt;</span>p<span class="token operator">></span>使用方法后反转字符串<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">reversedMessage2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>  <span class="token operator">&lt;</span>p<span class="token operator">></span>使用方法后反转字符串<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">reversedMessage2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>var cnt<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>var vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> <span class="token punctuation">{</span>    message<span class="token operator">:</span> <span class="token string">'Runoob!'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  computed<span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 计算属性的 getter</span>    reversedMessage<span class="token operator">:</span> <span class="token function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// `this` 指向 vm 实例</span>      cnt<span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> cnt<span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">{</span>    reversedMessage2<span class="token operator">:</span> <span class="token function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      cnt<span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> cnt<span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token comment" spellcheck="true">//执行结果：</span>原始字符串<span class="token operator">:</span> Runoob<span class="token operator">!</span>计算后反转字符串<span class="token operator">:</span> <span class="token number">2</span><span class="token operator">!</span>boonuR计算后反转字符串<span class="token operator">:</span> <span class="token number">2</span><span class="token operator">!</span>boonuR使用方法后反转字符串<span class="token operator">:</span> <span class="token number">3</span><span class="token operator">!</span>boonuR使用方法后反转字符串<span class="token operator">:</span> <span class="token number">4</span><span class="token operator">!</span>boonuR</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> vue </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础（三）组件相关</title>
      <link href="/2019/12/25/Vue%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%89%EF%BC%89%E7%BB%84%E4%BB%B6%E7%9B%B8%E5%85%B3/"/>
      <url>/2019/12/25/Vue%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%89%EF%BC%89%E7%BB%84%E4%BB%B6%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue基础（三）"><a href="#Vue基础（三）" class="headerlink" title="Vue基础（三）"></a>Vue基础（三）</h1><blockquote><p>安装vue</p><ul><li>安装npm：在nodejs.org下载nodejs（用node -v和npm -v检查；另可用npm install -g npm升级npm）</li><li>使用淘宝镜像（略过）$ npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a></li><li>安装vue-cli  :  cnpm install vue-cli -g   //全局安装 vue-cli</li></ul></blockquote><p>安装后，选定文件夹，执行</p><pre class=" language-java"><code class="language-java">npm init webpack<span class="token string">"project-name"</span></code></pre><h2 id="4-组件"><a href="#4-组件" class="headerlink" title="4. 组件"></a>4. 组件</h2><ul><li><p>初识组件：在app.js文件中</p><pre class=" language-java"><code class="language-java">Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"gtc"</span><span class="token punctuation">,</span><span class="token punctuation">{</span>    template<span class="token operator">:</span>'        <span class="token operator">&lt;</span>p<span class="token operator">></span>            <span class="token punctuation">{</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">:</span> 哈哈哈哈哈            <span class="token operator">&lt;</span>button <span class="token annotation punctuation">@ckick</span><span class="token operator">=</span><span class="token string">"change"</span> <span class="token operator">></span>更改<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>'<span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">//template只能有一个根标签，</span>     data<span class="token operator">:</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token keyword">return</span><span class="token punctuation">{</span>             name<span class="token operator">:</span> <span class="token string">"初始"</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token operator">:</span><span class="token punctuation">{</span>        change<span class="token operator">:</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"改变了"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre></li></ul><ul><li><p>建立自己的组件：</p><ol><li>在components文件夹下建立Users.vue</li></ol><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"users"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>ul<span class="token operator">></span>            <span class="token operator">&lt;</span>li v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"user in users"</span><span class="token operator">></span>            <span class="token punctuation">{</span><span class="token punctuation">{</span>user<span class="token punctuation">}</span><span class="token punctuation">}</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>export <span class="token keyword">default</span><span class="token punctuation">{</span>        name<span class="token operator">:</span><span class="token string">"users"</span><span class="token punctuation">,</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">{</span>                users<span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"Herry"</span><span class="token punctuation">,</span><span class="token string">"Bucky"</span><span class="token punctuation">,</span><span class="token string">"Jim"</span><span class="token punctuation">]</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>srript<span class="token operator">></span><span class="token operator">&lt;</span>style scoped<span class="token operator">></span>    <span class="token comment" spellcheck="true">//加了scoped后，可以控制样式的作用范围，不会发生冲突或继承</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span></code></pre><ol start="2"><li><p>注册组件：让我们的组件可以被使用</p><p>2.1 在<strong>main.js</strong>中进行，<strong>全局注册组件（不推荐全局）</strong></p><pre class=" language-java"><code class="language-java"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">import</span> Users from <span class="token string">'./components/Users'</span>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"users"</span><span class="token punctuation">,</span>Users<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>使用时：在App.vue中可以直接使用<users></users>标签</p><p>2.2 局部，在App.vue中</p><pre class=" language-java"><code class="language-java"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre></li></ol></li></ul><pre><code> &lt;script&gt; import Users from &#39;./components/Users&#39; export default{         name:&quot;users&quot;,         data(){             return{             }         },         components:{             &quot;users&quot;:Users    //此处users可省略，起名时不能为关键字         }     } &lt;/srript&gt; ```</code></pre><ul><li><p>组件传值</p><ol><li><p><strong>父组件向子组件传值</strong>：把公共的参数写进父组件，通过自定义属性，向子组件传值，子组件相应的进行接值；</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//父组件App.vue中</span><span class="token operator">&lt;</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>       <span class="token operator">&lt;</span>users v<span class="token operator">-</span>bind<span class="token operator">:</span>uzer<span class="token operator">=</span><span class="token string">"users"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>users<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>export <span class="token keyword">default</span><span class="token punctuation">{</span>    name<span class="token operator">:</span> <span class="token string">'app'</span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span><span class="token punctuation">{</span>            users<span class="token operator">:</span><span class="token punctuation">[</span>                <span class="token punctuation">{</span>name<span class="token operator">:</span><span class="token string">"jim"</span><span class="token punctuation">,</span>age<span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span>location<span class="token operator">:</span><span class="token string">"shenyang"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token punctuation">{</span>name<span class="token operator">:</span><span class="token string">"tim"</span><span class="token punctuation">,</span>age<span class="token operator">:</span><span class="token number">13</span><span class="token punctuation">,</span>location<span class="token operator">:</span><span class="token string">"shenyang"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token punctuation">{</span>name<span class="token operator">:</span><span class="token string">"mim"</span><span class="token punctuation">,</span>age<span class="token operator">:</span><span class="token number">14</span><span class="token punctuation">,</span>location<span class="token operator">:</span><span class="token string">"shenyang"</span><span class="token punctuation">}</span>            <span class="token punctuation">]</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>compoents<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>在子组件中</p><pre class=" language-java"><code class="language-java"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&lt;</span>script<span class="token operator">></span>export <span class="token keyword">default</span><span class="token punctuation">{</span>    name<span class="token operator">:</span><span class="token string">'users'</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//可以用 props:["uzer"]</span>    props<span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//取属性uzer的值，所以在调用时，直接用uzer；</span>        <span class="token comment" spellcheck="true">//例如：&lt;li v-for = "user in users">&lt;/li></span>        uzer<span class="token operator">:</span><span class="token punctuation">{</span>            type<span class="token operator">:</span>Array<span class="token punctuation">,</span>            required<span class="token operator">:</span><span class="token boolean">true</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span><span class="token punctuation">{</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre></li><li><p><strong>子组件向父组件传值：</strong>效果为，子组件间有相同的依赖元素，点击某一子组件，则所有依赖于该元素的值都发生改变；</p><p>子组件：</p><pre class=" language-java"><code class="language-java">methods<span class="token operator">:</span><span class="token punctuation">{</span>    change<span class="token operator">:</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//注册</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$<span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">"titleChanged"</span><span class="token punctuation">,</span><span class="token string">"改变后"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>父组件：</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>app<span class="token operator">-</span>header v<span class="token operator">-</span>on<span class="token operator">:</span>titleChanged<span class="token operator">=</span><span class="token string">"updateTitle($event)"</span>            v<span class="token operator">-</span>bind<span class="token operator">:</span>title<span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>app<span class="token operator">-</span>header<span class="token operator">></span>         <span class="token operator">&lt;</span>app<span class="token operator">-</span>footer v<span class="token operator">-</span>bind<span class="token operator">:</span>title<span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>app<span class="token operator">-</span>footer<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    export <span class="token keyword">default</span><span class="token punctuation">{</span>             name<span class="token operator">:</span><span class="token string">'App'</span><span class="token punctuation">,</span>             <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                 <span class="token keyword">return</span><span class="token punctuation">{</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span><span class="token punctuation">,</span>             methods<span class="token operator">:</span><span class="token punctuation">{</span>                 <span class="token function">updateTitle</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">{</span>                     <span class="token keyword">this</span><span class="token punctuation">.</span>title <span class="token operator">=</span> title<span class="token punctuation">;</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span><span class="token punctuation">,</span>             components<span class="token operator">:</span><span class="token punctuation">{</span>                 <span class="token string">"app-header"</span><span class="token operator">:</span>Header<span class="token punctuation">,</span>                 <span class="token string">"app-footer"</span><span class="token operator">:</span>Footer             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre></li></ol></li></ul><ul><li><p>生命周期：</p><p>在methods{}后，可添加</p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191227162941610.png" alt="钩子函数"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> vue </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-Blog项目</title>
      <link href="/2019/12/25/Vue-Bolg%E9%A1%B9%E7%9B%AE/"/>
      <url>/2019/12/25/Vue-Bolg%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-Blog项目"><a href="#Vue-Blog项目" class="headerlink" title="Vue-Blog项目"></a>Vue-Blog项目</h1><ul><li><p>多选框：此处把多选框设为数组，即categories[]，多选后，数组内会自动保留所选的value值</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"checkbox"</span> value<span class="token operator">=</span><span class="token string">"Vue.js"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"blog.categories"</span><span class="token operator">/</span><span class="token operator">></span></code></pre></li></ul><ul><li><p>单选框：</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"blog.author"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> vue </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础（四）路由相关</title>
      <link href="/2019/12/25/Vue%E5%9F%BA%E7%A1%80%EF%BC%88%E5%9B%9B%EF%BC%89%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3/"/>
      <url>/2019/12/25/Vue%E5%9F%BA%E7%A1%80%EF%BC%88%E5%9B%9B%EF%BC%89%E8%B7%AF%E7%94%B1%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue基础（四）"><a href="#Vue基础（四）" class="headerlink" title="Vue基础（四）"></a>Vue基础（四）</h1><h1 id="5-路由"><a href="#5-路由" class="headerlink" title="5.路由"></a>5.路由</h1><ul><li><p>若在建立项目初期，未选择路由配置，可在此处<strong>添加router</strong></p><blockquote><p>npm install vue-router –save-dev</p></blockquote><p>然后自己在 src - router新建index.js文件，配置路由相关。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> Vue from <span class="token string">'vue'</span><span class="token keyword">import</span> Router from <span class="token string">'vue-router'</span><span class="token keyword">import</span> HelloWorld from <span class="token string">'@/components/HelloWorld'</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Router<span class="token punctuation">)</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  routes<span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      path<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>      name<span class="token operator">:</span> <span class="token string">'HelloWorld'</span><span class="token punctuation">,</span>      component<span class="token operator">:</span> HelloWorld    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//去掉地址中的#</span>    mode<span class="token operator">:</span><span class="token string">"history"</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>并在main.js中注册</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> Vue from <span class="token string">'vue'</span><span class="token keyword">import</span> App from <span class="token string">'./App'</span><span class="token comment" spellcheck="true">//引用router</span><span class="token keyword">import</span> router from <span class="token string">'./router'</span>Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span><span class="token comment" spellcheck="true">/* eslint-disable no-new */</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//注册router</span>  router<span class="token punctuation">,</span>  components<span class="token operator">:</span> <span class="token punctuation">{</span> App <span class="token punctuation">}</span><span class="token punctuation">,</span>  template<span class="token operator">:</span> <span class="token string">'&lt;App/>'</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>最后在App.vue中添加要展现的内容</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>router<span class="token operator">-</span>view<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>view<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span></code></pre></li><li><p><strong>路由的使用：</strong>超链接可以不用<a>标签，避免页面的自动刷新；写法如下：</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>router<span class="token operator">-</span>link to<span class="token operator">=</span><span class="token string">"/hello"</span><span class="token operator">></span>HelloWorld<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">></span></code></pre></li><li><p><strong>vue自带http请求：vue-resource</strong></p><blockquote><p>npm install vue-resource –save-dev</p></blockquote><p>先在main.js中引入vue-resource</p><pre class=" language-java"><code class="language-java"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">import</span> VueResource from <span class="token string">'vue-resource'</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment" spellcheck="true">//use之后，就可以在全局任何地方使用    </span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueResource<span class="token punctuation">)</span></code></pre><p>然后，在组件中：</p><pre class=" language-java"><code class="language-java"><span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"http://xxxxx"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>users <span class="token operator">=</span> data<span class="token punctuation">.</span>body<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> vue </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础学习(二)</title>
      <link href="/2019/12/25/Vue%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89Web%E9%80%9A%E8%AE%AF/"/>
      <url>/2019/12/25/Vue%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89Web%E9%80%9A%E8%AE%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue基础（二）"><a href="#Vue基础（二）" class="headerlink" title="Vue基础（二）"></a>Vue基础（二）</h1><h2 id="3-web通讯"><a href="#3-web通讯" class="headerlink" title="3. web通讯"></a>3. web通讯</h2><p>引入ajax（axios）</p><blockquote><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.staticfile.org/axios/0.18.0/axios.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre></blockquote><ul><li><p>get方法</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>  <span class="token punctuation">{</span><span class="token punctuation">{</span> info <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script type <span class="token operator">=</span> <span class="token string">"text/javascript"</span><span class="token operator">></span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>  <span class="token function">data</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      info<span class="token operator">:</span> null    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">mounted</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    axios      <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'https://www.runoob.com/try/ajax/json_demo.json'</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>info <span class="token operator">=</span> response<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token function">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 请求失败处理</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>h1<span class="token operator">></span>网站列表<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>  <span class="token operator">&lt;</span>div    v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"site in info"</span>  <span class="token operator">></span>    <span class="token punctuation">{</span><span class="token punctuation">{</span> site<span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token punctuation">}</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script type <span class="token operator">=</span> <span class="token string">"text/javascript"</span><span class="token operator">></span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>  <span class="token function">data</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      info<span class="token operator">:</span> null    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">mounted</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    axios      <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'https://www.runoob.com/try/ajax/json_demo.json'</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>info <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>sites<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token function">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 请求失败处理</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>get传参格式：</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 直接在 URL 上添加参数 ID=12345</span>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/user?ID=12345'</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token function">function</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token function">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 也可以通过 params 设置参数：</span>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/user'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    params<span class="token operator">:</span> <span class="token punctuation">{</span>      ID<span class="token operator">:</span> <span class="token number">12345</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token function">function</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token function">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li><p>post方法</p><pre class=" language-java"><code class="language-java">axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/user'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    firstName<span class="token operator">:</span> <span class="token string">'Fred'</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 参数 firstName</span>    lastName<span class="token operator">:</span> <span class="token string">'Flintstone'</span>    <span class="token comment" spellcheck="true">// 参数 lastName</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token function">function</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token function">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> vue </tag>
            
            <tag> 基础 </tag>
            
            <tag> ajax </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
